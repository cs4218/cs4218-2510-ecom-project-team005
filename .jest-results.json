{"numFailedTestSuites":5,"numFailedTests":0,"numPassedTestSuites":9,"numPassedTests":81,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":5,"numTodoTests":0,"numTotalTestSuites":14,"numTotalTests":81,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1759698373832,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Categories Page Test Suite","Component Rendering Test Suite"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Component Rendering Test Suite should render with empty categories","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should render with empty categories"},{"ancestorTitles":["Categories Page Test Suite","Component Rendering Test Suite"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Component Rendering Test Suite should render Layout with correct title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render Layout with correct title"},{"ancestorTitles":["Categories Page Test Suite","Component Rendering Test Suite"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Component Rendering Test Suite should render container with Bootstrap classes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should render container with Bootstrap classes"},{"ancestorTitles":["Categories Page Test Suite","Categories Display Test Suite"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Categories Display Test Suite should render single category correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should render single category correctly"},{"ancestorTitles":["Categories Page Test Suite","Categories Display Test Suite"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Categories Display Test Suite should render multiple categories correctly","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should render multiple categories correctly"},{"ancestorTitles":["Categories Page Test Suite","Categories Display Test Suite"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Categories Display Test Suite should apply correct Bootstrap grid classes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should apply correct Bootstrap grid classes"},{"ancestorTitles":["Categories Page Test Suite","Hook Integration Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Hook Integration Test Suite should call useCategory hook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call useCategory hook"},{"ancestorTitles":["Categories Page Test Suite","Hook Integration Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Hook Integration Test Suite should handle undefined categories from hook","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle undefined categories from hook"},{"ancestorTitles":["Categories Page Test Suite","Hook Integration Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Hook Integration Test Suite should handle null categories from hook","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle null categories from hook"},{"ancestorTitles":["Categories Page Test Suite","Navigation Test Suite"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Navigation Test Suite should generate correct category URLs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate correct category URLs"},{"ancestorTitles":["Categories Page Test Suite","Navigation Test Suite"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Navigation Test Suite should handle empty slug values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty slug values"},{"ancestorTitles":["Categories Page Test Suite","Accessibility Test Suite"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Accessibility Test Suite should have proper semantic structure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have proper semantic structure"},{"ancestorTitles":["Categories Page Test Suite","Accessibility Test Suite"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Categories Page Test Suite Accessibility Test Suite should have accessible link text","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have accessible link text"}],"endTime":1759698374826,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/pages/Categories.test.js","startTime":1759698374137,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Products Component Test Suite"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should render page layout and admin menu","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should render page layout and admin menu"},{"ancestorTitles":["Products Component Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should fetch products on component mount","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fetch products on component mount"},{"ancestorTitles":["Products Component Test Suite"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should display product cards when data is loaded","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should display product cards when data is loaded"},{"ancestorTitles":["Products Component Test Suite"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should create correct navigation links for products","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create correct navigation links for products"},{"ancestorTitles":["Products Component Test Suite"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should display product images with correct src and alt","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display product images with correct src and alt"},{"ancestorTitles":["Products Component Test Suite"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should handle API network errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle API network errors gracefully"},{"ancestorTitles":["Products Component Test Suite"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should handle malicious product data safely","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should handle malicious product data safely"},{"ancestorTitles":["Products Component Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should handle empty products array gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle empty products array gracefully"},{"ancestorTitles":["Products Component Test Suite"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Products Component Test Suite should handle broken product images gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle broken product images gracefully"}],"endTime":1759698375032,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/pages/admin/Products.test.js","startTime":1759698374834,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["useCategory Hook Test Suite","Hook Initialization Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Hook Initialization Test Suite should initialize with empty categories array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize with empty categories array"},{"ancestorTitles":["useCategory Hook Test Suite","Hook Initialization Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Hook Initialization Test Suite should call API on mount","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should call API on mount"},{"ancestorTitles":["useCategory Hook Test Suite","Data Fetching Test Suite"],"duration":51,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Data Fetching Test Suite should update categories state with API data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update categories state with API data"},{"ancestorTitles":["useCategory Hook Test Suite","Data Fetching Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Data Fetching Test Suite should handle empty category response","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty category response"},{"ancestorTitles":["useCategory Hook Test Suite","Data Fetching Test Suite"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Data Fetching Test Suite should handle undefined category data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle undefined category data"},{"ancestorTitles":["useCategory Hook Test Suite","Data Fetching Test Suite"],"duration":51,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Data Fetching Test Suite should handle malformed API response","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle malformed API response"},{"ancestorTitles":["useCategory Hook Test Suite","Error Handling Test Suite"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Error Handling Test Suite should handle API errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle API errors gracefully"},{"ancestorTitles":["useCategory Hook Test Suite","Error Handling Test Suite"],"duration":54,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Error Handling Test Suite should handle network timeout errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle network timeout errors"},{"ancestorTitles":["useCategory Hook Test Suite","Error Handling Test Suite"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Error Handling Test Suite should handle 404 API errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle 404 API errors"},{"ancestorTitles":["useCategory Hook Test Suite","Hook Lifecycle Test Suite"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Hook Lifecycle Test Suite should only call API once on initial render","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should only call API once on initial render"},{"ancestorTitles":["useCategory Hook Test Suite","Hook Lifecycle Test Suite"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"useCategory Hook Test Suite Hook Lifecycle Test Suite should return consistent reference for same data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return consistent reference for same data"}],"endTime":1759698375504,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/hooks/useCategory.test.js","startTime":1759698375038,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["User Dashboard Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"User Dashboard Test Suite should display user information when auth data exists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should display user information when auth data exists"},{"ancestorTitles":["User Dashboard Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Dashboard Test Suite should render layout and user menu","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should render layout and user menu"},{"ancestorTitles":["User Dashboard Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Dashboard Test Suite should handle missing user data gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing user data gracefully"},{"ancestorTitles":["User Dashboard Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Dashboard Test Suite should handle malicious user data safely","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle malicious user data safely"},{"ancestorTitles":["User Dashboard Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Dashboard Test Suite should handle undefined user fields gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle undefined user fields gracefully"}],"endTime":1759698375618,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/pages/user/Dashboard.test.js","startTime":1759698375517,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Private Route Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Private Route Test Suite should show spinner when user has no token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show spinner when user has no token"},{"ancestorTitles":["Private Route Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Private Route Test Suite should not call API when no token exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not call API when no token exists"},{"ancestorTitles":["Private Route Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Private Route Test Suite should call API when token exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should call API when token exists"},{"ancestorTitles":["Private Route Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Private Route Test Suite should show spinner when API returns unauthorized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show spinner when API returns unauthorized"},{"ancestorTitles":["Private Route Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Private Route Test Suite should show outlet when API succeeds","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show outlet when API succeeds"},{"ancestorTitles":["Private Route Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Private Route Test Suite should handle API network errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle API network errors gracefully"}],"endTime":1759698375696,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/components/Routes/Private.test.js","startTime":1759698375623,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["User Menu Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"User Menu Test Suite should display dashboard title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should display dashboard title"},{"ancestorTitles":["User Menu Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Menu Test Suite should display profile and orders links","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display profile and orders links"},{"ancestorTitles":["User Menu Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Menu Test Suite should have correct navigation link paths","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have correct navigation link paths"}],"endTime":1759698375761,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/components/UserMenu.test.js","startTime":1759698375700,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["AdminDashboard Component"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AdminDashboard Component Should render AdminDashboard component with AdminMenu and AdminInfo","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Should render AdminDashboard component with AdminMenu and AdminInfo"}],"endTime":1759698375828,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/client/src/pages/admin/AdminDashboard.test.js","startTime":1759698375767,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1759698376253,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/updateProductController.test.js:38\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('./productController.js')));\n        ^^^^^\n\n    SyntaxError: await is only valid in async functions and the top level bodies of modules\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/updateProductController.test.js","startTime":1759698376253,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1759698376253,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/deleteProductController.test.js:28\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('./productController.js')));\n        ^^^^^\n\n    SyntaxError: await is only valid in async functions and the top level bodies of modules\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/deleteProductController.test.js","startTime":1759698376253,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1759698376253,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/createProductController.test.js:35\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('./productController.js')));\n        ^^^^^\n\n    SyntaxError: await is only valid in async functions and the top level bodies of modules\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/createProductController.test.js","startTime":1759698376253,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1759698376253,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/braintreeController.test.js:59\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('./productController.js')));\n        ^^^^^\n\n    SyntaxError: await is only valid in async functions and the top level bodies of modules\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/braintreeController.test.js","startTime":1759698376253,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Category Model Test Suite","Schema Definition Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Schema Definition Test Suite should have all required fields defined","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have all required fields defined"},{"ancestorTitles":["Category Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Schema Definition Test Suite should have all required fields to be of correct type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have all required fields to be of correct type"},{"ancestorTitles":["Category Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Schema Definition Test Suite should have slug field with lowercase option enabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have slug field with lowercase option enabled"},{"ancestorTitles":["Category Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Schema Definition Test Suite should verify field constraints and options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should verify field constraints and options"},{"ancestorTitles":["Category Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Schema Definition Test Suite should verify timestamps configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should verify timestamps configuration"},{"ancestorTitles":["Category Model Test Suite","Document Validation Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Document Validation Test Suite should create a valid document with all required fields","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create a valid document with all required fields"},{"ancestorTitles":["Category Model Test Suite","Document Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Document Validation Test Suite should enforce required fields on validation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should enforce required fields on validation"},{"ancestorTitles":["Category Model Test Suite","Document Validation Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Document Validation Test Suite should apply lowercase transformation to slug","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply lowercase transformation to slug"},{"ancestorTitles":["Category Model Test Suite","Document Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Document Validation Test Suite should handle empty document creation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty document creation"},{"ancestorTitles":["Category Model Test Suite","Document Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Document Validation Test Suite should handle slug generation scenarios","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle slug generation scenarios"},{"ancestorTitles":["Category Model Test Suite","Model Export Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Model Export Test Suite should export a valid mongoose model","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should export a valid mongoose model"},{"ancestorTitles":["Category Model Test Suite","Model Export Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Model Export Test Suite should have correct model configuration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should have correct model configuration"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should reject categories without names","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject categories without names"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should have unique constraint on category names","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have unique constraint on category names"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should reject invalid slug formats with spaces and special characters","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject invalid slug formats with spaces and special characters"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should reject category names that are too long","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject category names that are too long"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should reject category names that are too short","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject category names that are too short"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should reject category names with HTML/script tags","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject category names with HTML/script tags"},{"ancestorTitles":["Category Model Test Suite","Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Category Model Test Suite Validation Test Suite should accept valid category names","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid category names"}],"endTime":1759698376169,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/models/categoryModel.test.js","startTime":1759698375966,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["User Model Test Suite","Schema Definition Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Schema Definition Test Suite should have all required fields defined","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should have all required fields defined"},{"ancestorTitles":["User Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Schema Definition Test Suite should have all required fields to be of correct type","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should have all required fields to be of correct type"},{"ancestorTitles":["User Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Schema Definition Test Suite should have email field as unique","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have email field as unique"},{"ancestorTitles":["User Model Test Suite","Schema Definition Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Schema Definition Test Suite should have name field with trim enabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have name field with trim enabled"},{"ancestorTitles":["User Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Schema Definition Test Suite should have role field with default value 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have role field with default value 0"},{"ancestorTitles":["User Model Test Suite","Schema Definition Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Schema Definition Test Suite timestamps are configured on schema","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"timestamps are configured on schema"},{"ancestorTitles":["User Model Test Suite","Document Validation Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Document Validation Test Suite should create a valid document with all required fields","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create a valid document with all required fields"},{"ancestorTitles":["User Model Test Suite","Document Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Document Validation Test Suite should enforce required fields on validation","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should enforce required fields on validation"},{"ancestorTitles":["User Model Test Suite","Document Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Document Validation Test Suite should assign default role value when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should assign default role value when not provided"},{"ancestorTitles":["User Model Test Suite","Document Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Document Validation Test Suite should trim whitespace from name field","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should trim whitespace from name field"},{"ancestorTitles":["User Model Test Suite","Model Export Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Model Export Test Suite should export a valid mongoose model","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should export a valid mongoose model"},{"ancestorTitles":["User Model Test Suite","Validation Test Suite"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Validation Test Suite should reject invalid email formats","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject invalid email formats"},{"ancestorTitles":["User Model Test Suite","Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Validation Test Suite should reject weak passwords","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject weak passwords"},{"ancestorTitles":["User Model Test Suite","Validation Test Suite"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"User Model Test Suite Validation Test Suite should reject invalid phone numbers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject invalid phone numbers"}],"endTime":1759698376227,"message":"","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/models/userModel.test.js","startTime":1759698376170,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1759698376253,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/categoryController.test.js:32\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('./categoryController.js')));\n        ^^^^^\n\n    SyntaxError: await is only valid in async functions and the top level bodies of modules\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n","name":"/Users/ardasaritas/cs4218-2510-ecom-project-team005/controllers/categoryController.test.js","startTime":1759698376253,"status":"failed","summary":""}],"wasInterrupted":false}
